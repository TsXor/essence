{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/essence/webpack/bootstrap","webpack://@flarum/essence/webpack/runtime/compat get default export","webpack://@flarum/essence/webpack/runtime/define property getters","webpack://@flarum/essence/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/essence/webpack/runtime/make namespace object","webpack://@flarum/essence/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/utils/string']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@flarum/essence/external root \"flarum.core.compat['forum/components/DiscussionHero']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/extenders']\"","webpack://@flarum/essence/external root \"flarum.core.compat['common/Model']\"","webpack://@flarum/essence/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/essence/external root \"flarum.core.compat['forum/components/EventPost']\"","webpack://@flarum/essence/./src/forum/components/DiscussionSetEssentialPost.js","webpack://@flarum/essence/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/essence/./src/forum/extend.ts","webpack://@flarum/essence/./src/forum/index.js","webpack://@flarum/essence/./src/forum/addEssentialBadge.js","webpack://@flarum/essence/./src/forum/addEssentialControl.js","webpack://@flarum/essence/./src/forum/addEssentialExcerpt.js","webpack://@flarum/essence/./src/forum/addEssentialClass.js","webpack://@flarum/essence/./src/forum/addEssentialDate.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionHero'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/EventPost'];","import EventPost from 'flarum/forum/components/EventPost';\n\nexport default class DiscussionSetEssentialPost extends EventPost {\n  icon() {\n    return 'fas fa-star';\n  }\n\n  descriptionKey() {\n    return this.attrs.post.content().essential\n      ? 'flarum-essence.forum.post_stream.discussion_set_essential_text'\n      : 'flarum-essence.forum.post_stream.discussion_unset_essential_text';\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Extend from 'flarum/common/extenders';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionSetEssentialPost from './components/DiscussionSetEssentialPost';\n\nexport default [\n  new Extend.PostTypes() //\n    .add('discussionSetEssential', DiscussionSetEssentialPost),\n\n  new Extend.Model(Discussion) //\n    .attribute<boolean>('isEssential')\n    .attribute<Date, string>('lastSetEssentialAt', Model.transformDate)\n    .attribute<boolean>('canSetEssential'),\n];\n","import app from 'flarum/forum/app';\n\nimport addEssentialBadge from './addEssentialBadge';\nimport addEssentialStateControl from './addEssentialControl';\nimport addEssentialExcerpt from './addEssentialExcerpt';\nimport addEssentialClass from './addEssentialClass';\nimport addEssentialDate from './addEssentialDate';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('flarum-essence', () => {\n  addEssentialBadge();\n  addEssentialStateControl();\n  addEssentialExcerpt();\n  addEssentialClass();\n  addEssentialDate();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\n\nexport default function addEssentialBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    if (this.isEssential()) {\n      badges.add(\n        'essential',\n        <Badge\n          type=\"essential\"\n          label={app.translator.trans('flarum-essence.forum.badge.essential_tooltip')}\n          icon=\"fas fa-star\"\n        />,\n        10\n      );\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport Button from 'flarum/common/components/Button';\n\nexport default function addEssentialStateControl() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    if (discussion.canSetEssential()) {\n      var action = discussion.isEssential() ? 'unset' : 'set';\n      items.add(\n        'essence',\n        <Button icon=\"fas fa-star\" onclick={this.filpEssentialStatusAction.bind(discussion)}>\n          {app.translator.trans(\n            `flarum-essence.forum.discussion_controls.${action}_essential_button`\n          )}\n        </Button>\n      );\n    }\n  });\n\n  DiscussionControls.filpEssentialStatusAction = function () {\n    this.save({ isEssential: !this.isEssential() }).then(() => {\n      if (app.current.matches(DiscussionPage)) {\n        app.current.get('stream').update();\n      }\n\n      m.redraw();\n    });\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default function addEssentialExcerpt() {\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (app.current.matches(IndexPage) || app.current.matches(DiscussionPage)) {\n      params.include.push('firstPost');\n    }\n  });\n\n  extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n    const discussion = this.attrs.discussion;\n\n    if (discussion.isEssential() && !this.attrs.params.q && !discussion.lastReadPostNumber()) {\n      const firstPost = discussion.firstPost();\n\n      if (firstPost) {\n        const excerpt = truncate(firstPost.contentPlain(), 175);\n\n        // Wrapping in <div> because ItemList entries need to be vnodes\n        items.add('excerpt', <div>{excerpt}</div>, -100);\n      }\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport classList from 'flarum/common/utils/classList';\n\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\n\nexport default function addEssentialClass() {\n  extend(DiscussionListItem.prototype, 'elementAttrs', function (attrs) {\n    if (this.attrs.discussion.isEssential()) {\n      // \"DiscussionListItem--xxx\" will be appended to the class of discussion\n      // elements, and you can use this class to give some special styles\n      // to essential posts\n      attrs.className = classList(attrs.className, 'DiscussionListItem--essential');\n    }\n  });\n}\n","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport DiscussionHero from 'flarum/forum/components/DiscussionHero';\r\n\r\nexport default function addEssentialDate() {\r\n  // put date after title\r\n  extend(DiscussionHero.prototype, 'items', function (items) {\r\n    if (!this.attrs.discussion.isEssential()) return;\r\n    const essential_date = this.attrs.discussion.lastSetEssentialAt();\r\n    items.add(\r\n      'essential-date',\r\n      <span className=\"DiscussionHero-essential-date\">\r\n        {app.translator.trans('flarum-essence.forum.discussion_hero.essential_date', {\r\n          time: humanTime(essential_date)\r\n        })}\r\n      </span>,\r\n      -1\r\n    );\r\n  });\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","DiscussionSetEssentialPost","_EventPost","subClass","superClass","apply","arguments","create","constructor","_proto","icon","descriptionKey","this","attrs","post","content","essential","EventPost","Extend","add","Discussion","attribute","Model","app","extend","badges","isEssential","m","Badge","type","label","trans","DiscussionControls","items","discussion","canSetEssential","action","Button","onclick","filpEssentialStatusAction","save","then","matches","DiscussionPage","update","redraw","DiscussionListState","params","IndexPage","include","push","DiscussionListItem","q","lastReadPostNumber","firstPost","excerpt","truncate","contentPlain","className","classList","DiscussionHero","essential_date","lastSetEssentialAt","time","humanTime"],"sourceRoot":""}